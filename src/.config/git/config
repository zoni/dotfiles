[advice]
	detachedHead = false
[user]
	name = Nick Groenen
	email = nick@groenen.me
	signingkey = 4F0AD019928AE098
[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[commit]
	verbose = true
	gpgsign = true
[clean]
	requireForce = false
[core]
	excludesfile = ~/.gitignore
[fetch]
	recurseSubmodules = on-demand
	# A value of 0 will give some reasonable default. If unset, it defaults to 1.
	parallel = 0
[init]
	defaultBranch = main
[interactive]
    singleKey = true
[merge]
	tool = meld
	keepbackup = false
	defaultToUpstream = true
	conflictstyle = diff3
[diff]
	algorithm = patience
	tool = meld
[diff "json"]
	# Instead of `jq .`, one could also use `python -m json.tool`
	textconv = jq .
[push]
	default = upstream
	recurseSubmodules = check
[rebase]
	autoSquash = true
	autoStash = true
[rerere]
	enabled = true
	autoupdate = true
[alias]
	# Compact log, with lots of pretty colors
	compactlog = log --graph --pretty=format:'%C(yellow)%h%Creset %C(yellow)%d%Creset %s %C(bold blue)(%an, %cr)%Creset' --abbrev-commit --date=relative
	# Show commits in upstream that aren't yet merged in your local branch
	behind = "!sh -c 'tig ..@{u}'"
	# And the opposite, commits in local branch that aren't yet push upstream
	ahead = "!sh -c 'tig @{u}..'"
	# Nuke branches (local and remote)
	nuke = !git-nuke
	# See what new commits have been created by the last command. Mainly useful
	# to see commits pulled in by a git pull.
	new = "!sh -c 'tig $1@{1}..$1@{0} \"$@\"'"
	# Show authors matching the supplied substring
	whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
	# Print the tracking branch that is configured for the current branch, or an
	# empty line if no tracking branch is set.
	tracking = "!sh -c 'git for-each-ref --format=\"%(upstream:short)\" $(git symbolic-ref -q HEAD)'"
	# Authors, sorted by amount of commits
	authors = "!sh -c 'git log --all --format=\"%cN <%cE>\" | sort | uniq -c | sort -rn'"
